import streamlit as st
import torch
import re
from transformers import MT5ForConditionalGeneration, AutoTokenizer

# Model yolu ve cihaz ayarÄ±
model_path = "./mt5_summary_model"
device = torch.device("cuda" if torch.cuda.is_available() else "cpu")

# Model ve tokenizer yÃ¼kle (AutoTokenizer ile uyumluluk saÄŸlanÄ±r)
model = MT5ForConditionalGeneration.from_pretrained(model_path).to(device)
model.eval()
tokenizer = AutoTokenizer.from_pretrained(model_path, legacy=False)

# Temizleme fonksiyonlarÄ±
def clean_input(text):
    text = re.sub(r'\s+', ' ', text.replace('\n', ' ').replace('\t', ' ').replace('\\', ' '))
    return text.strip()

def clean_output(text):
    return re.sub(r'<extra_id_\d+>', '', text).strip()

# Ã–zetleme fonksiyonu
def summarize(text):
    input_text = "Haber Ã¶zeti Ã¼ret: " + clean_input(text)
    inputs = tokenizer(
        input_text,
        return_tensors="pt",
        truncation=True,
        padding="max_length",
        max_length=1024
    ).to(device)

    with torch.no_grad():
        outputs = model.generate(
            **inputs,
            max_length=156,
            num_beams=4,
            repetition_penalty=1.5,
            no_repeat_ngram_size=3,
            early_stopping=True
        )

    summary = tokenizer.decode(outputs[0], skip_special_tokens=True)
    return clean_output(summary)

# Streamlit arayÃ¼zÃ¼
st.title("ðŸ“„ TÃ¼rkÃ§e Haber Ã–zetleyici")
st.write("EÄŸittiÄŸiniz Ã¶zel mT5 modeliyle haberleri otomatik olarak Ã¶zetleyin.")

user_input = st.text_area("ðŸ“° Haberi buraya yapÄ±ÅŸtÄ±rÄ±n:", height=300)

if st.button("ðŸ“Œ Ã–zetle"):
    if user_input.strip():
        with st.spinner("Model Ã§alÄ±ÅŸÄ±yor..."):
            summary = summarize(user_input)
        st.success("âœ… Ã–zet:")
        st.write(summary)
    else:
        st.warning("LÃ¼tfen bir metin girin.")
